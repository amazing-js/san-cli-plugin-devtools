<template>
    <div id="devtools-app">
        <div class="header">
            <h1 class="title">San DevTools Remote Inspector</h1>
            <s-tag s-if="status ==='error'" color="red" slot="tags">Error</s-tag>
            <s-tag s-if="status ==='connected'" color="green" slot="tags">Connected</s-tag>
            <s-tag s-if="status ==='disconnected'" color="purple" slot="tags">Disconnected</s-tag>
            <s-tag s-if="status ==='connecting'" color="orange" slot="tags">Connecting</s-tag>
        </div>
        <div class="wrap">
            <s-grid-row>
                <s-grid-col span="{{12}}">
                    <div class="description">
                        <div class="term">WebSocket Host：</div>
                        <div class="detail">{{config.wsHost}}</div>
                    </div>
                </s-grid-col>
                <s-grid-col span="{{12}}">
                    <div class="description">
                        <div class="term">Port：</div>
                        <div class="detail">{{config.wsPort}}</div>
                    </div>
                </s-grid-col>
                <s-grid-col span="{{24}}">
                    <div class="description">
                        <div class="term"><s-badge count="{{1}}" style="{{{'background-color': 'rgba(25, 104, 250, .6)'}}}"/>  添加 Backend.js 到调试页面顶部（San.js之前）：</div>
                        <div class="detail"><a target="_blank" href="{{backendjs}}">{{config.backendjs}}</a></div>
                    </div>
                    <div class="description">
                        <div class="term"><s-badge count="{{2}}" style="{{{'background-color': 'rgba(25, 104, 250, .6)'}}}"/>  访问该页面，选择调试页面，点击链接开始调试</div>
                    </div>
                </s-grid-col>
            </s-grid-row>
            <div s-if="config.backends.length===0" class="emptyInfo">没有检测到待调试的页面</div>
            <s-list
                slot="footer"
                itemLayout="vertical"
                size="large"
                dataSource="{{config.backends}}"
            >
                <s-list-item slot="renderItem" actions="{{['edit', 'more']}}">
                    <a slot="edit" on-click="openSanDevtools(item)"><s-icon type="bug" style="margin-right: 8px;" />San DevTools</a>
                    <a slot="more" on-click="openChii(item)"><s-icon type="chrome" style="margin-right: 8px;" />Chrome DevTools</a>
                    <s-list-item-meta description="{{item.url}}">
                        <s-avatar shape="circle" size="large" slot="avatar" src="{{item.favicon || logo}}" ></s-avatar>
                        <a href="javascript:void(0);" slot="title">{{item.title}}</a>
                    </s-list-item-meta>
                </s-list-item>
                <div slot="footer" class="footer">Powered by <s-button type="link" href="{{siteUrl}}"><b>{{pkgName}}</b></s-button> v{{version}}</div>
            </s-list>
        </div>
    </div>
</template>
<script>
import './home.less';
import logo from '../../assets/icons/logo.svg?inline';
import pkg from 'san-devtools/package.json';

    export default class Home extends SanComponent{
        openSanDevtools(item) {
            let config  = this.data.get('config');
            // eslint-disable-next-line max-len
            window.open(`${config.frontendUrl}&backendId=${item.id}`, 'San Devtools');
        }
        openChii(item){
            let config  = this.data.get('config');
            let protocol = config.frontendUrl && config.frontendUrl.split('\/\/')[0];
            const chiipath = `${protocol}//${config.wsHost}:${config.wsPort}/chii/chii_app.html`;
            const url = `${chiipath}?${protocol==='https:'?'wss':'ws'}=${config.wsHost}:${config.wsPort}/frontend/chii?backendId=${item.id}`;
            window.open(url, 'Chrome Devtools');
        }
        attached() {
            let config  = this.data.get('config');
            let _self = this;
            const timerIdMap = new Map();
            const handlers = {
                backendRemove(data) {
                    // remove 延迟
                    if (data.id) {
                        const timerId = setTimeout(() => {
                            const index = _self.data.get('config.backends').findIndex((val) => val.id === data.id);
                            _self.data.splice('config.backends', [index, 1]);
                            timerIdMap.delete(data.id);
                        }, 1e3);
                        timerIdMap.set(data.id, timerId);
                    }
                },
                backendAppend(data) {
                    const timerId = timerIdMap.get(data.id);
                    if (timerId) {
                        clearTimeout(timerId);
                    }
                    else {
                        _self.data.unshift('config.backends', data);
                        _self.dispatch('backendAppend', data);
                    }
                }
            };

            const protocol = location.protocol === 'https:' ? 'wss:' : 'ws:';
            const ws = new window.WebSocket(`${protocol}//${config.wsHost}:${config.wsPort}/home/${config.sessionId}`);
            ws.onopen = () => {
                // 绿色
                _self.data.set('status', 'connected');
                _self.dispatch('status', 'connected');

                ws.onmessage = (e) => {
                    let data = e.data;
                    data = JSON.parse(data);
                    const handler = handlers[data.event];
                    if (typeof handler === 'function') {
                        handler(data.payload);
                    }
                };
            };
            ws.onerror = e => {
                // 红色
                _self.data.set('status', 'error');
                console.error(e);
            };
            ws.onclose = () => {
                // 灰色
                _self.data.set('status', 'disconnected');
                _self.dispatch('status', 'disconnected');
            };
        }
        initData() {
            return {
                logo,
                pkgName: pkg.name,
                version: pkg.version,
                siteUrl: pkg.repository.url,
                // 黄色
                status: 'connecting'
            };
        }
    }
</script>
